.bread_crumb_limited_partnership
  = render_breadcrumbs :separator => ' / '

= form_for @manager, url: entities_llc_manager_path(@entity.key, @manager.id), html: {class: "entity-page-xhr"} do |f|
  = hidden_field_tag :int_action, 'Add Outside Manager'
  - if @manager.errors.any?
    #error_explanation
      h2 = "#{pluralize(@manager.errors.count, "error")} prohibited this Manager from being saved:"
      ul
        - @manager.errors.full_messages.each do |message|
          li = message

  - entity_managers = options_html('manager', "false", @manager.super_entity, f.object.temp_id, 'array')
  - individual_managers = options_html('manager', "true", @manager.super_entity, f.object.temp_id, 'array')

  - plural_entity_str = entity_managers.length != 1 ? 'entity clients or contacts' : 'entity client or contact'
  - plural_individual_str = individual_managers.length != 1 ? 'individual clients or contacts' : 'individual client or contact'
  - basic_str = "You have #{individual_managers.length} #{plural_individual_str} and #{entity_managers.length} #{plural_entity_str} who could serve as Manager of this LLC."

  .col-lg-4.close-md-4.col-sm-12.col-xs-12
    - if individual_managers.length == 0 && entity_managers.length == 0
      p.text-info = (basic_str + " Please create a new <span class='ipp-modal' data-id='add-client'><b>Client</b></span> or a new LLC Manager <span class='ipp-modal' data-id='add-contact'><b>Contact</b></span>.").html_safe
    - elsif individual_managers.length == 1 && entity_managers.length == 0
      - @manager.is_person = true
      p.text-info = (basic_str + " Since there is only one client or contact, it has been pre-selected. However, you could also create a new <span class='ipp-modal' data-id='add-client'><b>Client</b></span> or a new LLC Manager <span class='ipp-modal' data-id='add-contact'><b>Contact</b></span> if you so desire.").html_safe
    - elsif individual_managers.length == 0 && entity_managers.length == 1
      p.text-info = (basic_str + " Since there is only one client or contact, it has been pre-selected. However, you could also create a new <span class='ipp-modal' data-id='add-client'><b>Client</b></span> or a new LLC Manager <span class='ipp-modal' data-id='add-contact'><b>Contact</b></span> if you so desire.").html_safe
    - else
      p.text-info = (basic_str + " Please select one or create a new <span class='ipp-modal' data-id='add-client'><b>Client</b></span> or a new LLC Manager <span class='ipp-modal' data-id='add-contact'><b>Contact</b></span> if you so desire.").html_safe

    - if individual_managers.length != 0 || entity_managers.length != 0
      .form-group style=("#{('display: none;' if entity_managers.length == 0 || individual_managers.length == 0)}")
        .option-1
          = f.label "Individual"
          = f.radio_button :is_person, true, checked: @manager.is_person
        .option-2
          = f.label "Entity"
          = f.radio_button :is_person, false, checked: !@manager.is_person

      .form-group#manager_entity
        label.is-person-hide style=("#{('display: none;' if @manager.is_person)}") Owning Entity

        - if @manager.is_person
          = f.select :temp_id, options_html('manager', "true", @manager.super_entity, f.object.temp_id), {}, class: "form-control #{'disabled-like' if individual_managers.length == 1}", data: {id: @manager.super_entity.id, clienttype: 'manager'}, readonly: (individual_managers.length == 1)
        - else
          = f.select :temp_id, options_html('manager', "false", @manager.super_entity, f.object.temp_id), {}, class: "form-control #{'disabled-like' if entity_managers.length == 1}", data: {id: @manager.super_entity.id, clienttype: 'manager'}, readonly: (entity_managers.length == 1)

        = hidden_field_tag :person_true_class, "#{'disabled-like' if individual_managers.length == 1}"
        = hidden_field_tag :person_false_class, "#{'disabled-like' if entity_managers.length == 1}"
        = hidden_field_tag "stock_holder[member_type_id]", MemberType.getLLCId
        = hidden_field_tag :cid, @manager.temp_id
      .form-group
        = f.submit 'Save', class: "btn btn-primary"