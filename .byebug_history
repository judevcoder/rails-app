continue
@exchangor.has_purchased_properties?
exit
@property.assign_attributes(property_params)
property_params
continue
property_params
@property.owner_entity_id
continue
@property.owner_person_is.nil?
@property.owner_person_is
!@property.owner_person_is.nil?
@property.owner_entity_id_indv
@property.owner_entity_id_indiv
@property.owner_entity_id
@property.assign_attributes(property_params)
property_params
continue
property_in_transaction
property_params[:property_id]
continue
count(transaction_property_params)
transaction_property_params.length
transaction_property_params
continue
transaction_personnel_params[:personnel_category]
transaction_personnel_params
transaction_personnel_params[:contact_id] 
continue
conintue
self.is_sale
self.transaction_id
continue
self.transaction_id
continue
TransactionPurchase.find(self.transaction_id)
self.transaction_id
self.is_sale
continue
Property.where(ownership_status: 'Purchased', owner_entity_id: self.id)
Property.where(ownership_status: 'Purchased', owner_entity_id: self.id).length > 0 ? true : false
self.owner_entity_id
self.id
continue
(a + b + c).uniq.select! { |item| item.has_purchased_properties? == true}
continue
(a + b + c).uniq.select! { |item| item.has_purchased_properties?}
Property.where(ownership_status: 'Purchased', owner_entity_id: self.id).length > 0 ? true : false
entities_owning_purchased_properties
continue
Property.where(ownership_status: 'Purchased', owner_entity_id: self.id).length > 0 ? true : false
self.id
continue
item
(a + b + c).uniq.select! { |item| item.has_purchased_properties?}
(a + b + c).uniq[0].has_purchased_properties?
continue
(a + b + c).uniq.select! { |item| item.has_purchased_properties?}
continue
(a + b + c).uniq.select! { |item| item.has_purchased_properties?}
(a + b + c).uniq[0].has_purchased_properties?
(a + b + c).uniq[0]
(a + b + c).uniq.select!
entities_owning_purchased_properties
continue
entities_owning_purchased_properties.length
entities_owning_purchased_properties
continue
          |item| item.has_purchased_properties?
(a + b + c).uniq.select! {
(a + b + c).uniq.length
(a + b + c).uniq
entities_owning_purchased_properties
continue
object_array.length
continue
object_array.length
object_array.each
continue
(a + b + c).uniq.length
continue
(a + b + c).uniq.length
continue
object_array
continue
has_purchased_properties
continue
@user.attorney_firm
continue
@user.attorney_firm
@user.attorney_firm_id
continue
conintue
@user.attorney_firm_id
@user.attorney_firm_id = firm.id
@user.attorney_form_id = firm.id
firm.id
@user.attorney_firm_id
@user
firm.id
firm
continue
params[:law_firm_name]
continue
params[:firm_id] != 0
params[:firm_id]
continue
params[:firm_id]
continue
transaction_property.property.owner
transaction_property.property
transaction_property
continue
owing_transaction_properties
attorney_transaction_properties
broker_transaction_properties
continue
params[:transaction_property_id]
continue
params[:transaction_property_id]
continue
(a+b+c).uniq.length
(a+b+c).uniq.select!{|item| item.has_purchased_properties?}
continue
(a+b+c).uniq.select!{|item| item.has_purchased_properites?}
          |item| item.has_purchased_properties?
        .select! {
(a+b+c).uniq
          |item| item.has_purchased_properties?
        .select! {
(a+b+c).uniq
   258:           |item| item.has_purchased_properties?
   257:         .select! {
(a+b+c).uniq
continue
(a+b+c).uniq.length > 0
(a+b+c).uniq.length
continue
(a+b+c).uniq.count
(a+b+c).uniq.length
(a+b+c).uniq
continue
(a+b+c).uniq.count
(a+b+c).uniq.length
(a+b+c).uniq
continue
a
continue
[2,3] + (5..100).to_a
continue
t1.save
t1.transaction_main_id
t.relinquishing_seller_entity_id
@transaction_main.id
t
t1.save
t1
continue
t1
continue
@transaction
@transaction_main
e
e.message
continue
e
e.message
continue
t1.save
t1
@transaction
@transaction_main
continue
property_params[:property_id]
property_parmas[:property_id]
property_params
continue
transaction_property_params[:transaction_properties_attributes]
transaction_property_params[:transaction_properties_attributes].to_array
transaction_property_params[:transaction_properties_attributes].to_json[0]
transaction_property_params[:transaction_properties_attributes].to_json
property_params["property_id"]transaction_property_params[:transaction_properties_attributes]
property_params["property_id"]
property_params["0".to_sym]
property_params[0]
property_params["0"]
transaction_property_params[:transaction_properties_attributes]
property_params
property_params[:property_id]
continue
transaction_property_params[:transaction_properties_attributes]
transaction_property_params.transaction_properties_attributes
transaction_property_params
property_params["transaction_properties_attributes"]
property_params["id"]
property_params["property_id"]
property_params
property_params["transaction_properties_attributes"]["property_id"]
property_params["property_id"]
property_params.property_id
property_params["transaction_properties_attributes"]
property_params[:transaction_properties_attributes]
property_params[:property_id]
property_params
continue
e.message
continue
params[:identification_rule]
continue
e.message
continue
@cur_transaction_property
continue
@cur_transaction_property
continue
e.message
continue
e.message
continue
@transaction_property_offer.class
@transaction_property_offer
continue
@transaction_property_offer.class
@transaction_property_offer
continue
e.message
continue
e.message
continue
params[:cur_property]
params[:basket_id]
continue
params[:initial_asking_price]["#{transaction_property.property_id}".to_sym]
params[:initial_asking_price]["#{transaction_property.property_id}"
params[:initial_asking_price]["#{transaction_property.property_id}".to_sym] == 1
continue
params[:initial_asking_price]["#{transaction_property.property_id}".to_sym]
@basket_properties.include?
continue
e.message
continue
@transaction.transaction_properties.count
transaction_property.id
@transaction.transaction_properties
e.message
continue
params[:basket_id]
continue
@basket_properties.include? transaction_property.property_id
continue
transaction_property.property_id
continue
basket
@basket_properties
continue
contiue
