continue
request.xhr?
continue
request.xhr?
continue
@entity.suffix
@entity.name
@entity.suffix
continue
@principal.name
@principal
continue
current_user.entities_list(super_entity.id).where(type_: [6, 10, 11, 12, 13, 14]).order(type_: :asc)
continue
request.get?
request.post?
continue
@entity
@stockholder.new_record?
continue
@entity.name
continue
@entity.name
@entity
continue
@entity.present?
@entity.present
continue
@entity.present?
next
continue
@entity.present?
Entity.new(type_: params[:type])
@entity
entity_check()
@entity.type_
@entity.type
@entity.present?
@entity
type
_type
params[:type]
@entity
@entity.present?
continue
@entity.present?
@entity.present
@entity.preset
@entity.present?
@entity
continue
next
@entity.present?
@entity.present
continue
@entity
entity
continue
@entity.present?
next
continue
clients_path
clients_path,
continue
clients_index_path
clients_path
client_path
continue
exit
@beneficiary.save
next
Beneficiary.count
Benficiary
continue
super_entity.beneficiaries
super_entity.trustees.select(:entity_id).map(&:entity_id)
super_entity.trustees
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).order(type_: :asc).select(:id, :first_name, :last_name)
super_entity.trustees.select(:id).map(&:id)
super_entity.trustees[0]
super_entity.trustees.select(:id)
super_entity.trustees
super_entity.entity_id
super_entity
Trustee.all[0]
Trustee.select(:entity_id).map(&:entity_id)
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).order(type_: :asc).select(:id, :first_name, :last_name)
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).order(type_: :asc).select(:first_name, :last_name)
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).order(type_: :asc)
person_true_entities.select(:first_name, :last_name)
person_true_entities
continue
person_true_entities = current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).where('id not in (?)', Trustee.select(:entity_id).map(&:entity_id)).order(type_: :asc).select(:id)
        Trustee.select(:entity_id).map(&:entity_id)
person_true_entities = current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).where('id not in (?)', Trustee.select(:entity_id).map(&:entity_id)).order(type_: :asc)
Beneficiary.select(:entity_id).map(&:entity_id)
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).where('id not in (?)', Beneficiary.select(:entity_id).map(&:entity_id)).order(type_: :asc).length
Beneficiary.select(:entity_id).map(&:entity_id)
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).order(type_: :asc).length
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).order(type_: :asc)
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).where('id not in (?)', Beneficiary.select(:entity_id).map(&:entity_id)).order(type_: :asc).length
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).where('id not in (?)', Beneficiary.select(:entity_id).map(&:entity_id)).order(type_: :asc)
continue
Trustee.select(:entity_id).map(&:entity_id)
Trustee.select(:entity_id).map(:entity_id)
Trustee.all
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).order(type_: :asc).select(:id, :first_name, :last_name)
Trustee.select(:super_entity_id).map(&:super_entity_id)
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).where('id not in (?)', Trustee.select(:super_entity_id).map(&:super_entity_id)).order(type_: :asc).select(:id, :first_name, :last_name)
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).where('id not in (?)', Trustee.select(:super_entity_id).map(&:super_entity_id)).order(type_: :asc).select(:id, :first_name)
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).where('id not in (?)', Trustee.select(:super_entity_id).map(&:super_entity_id)).order(type_: :asc).select(:first_name)
current_user.entities_list(super_entity.id).where(type_: [1, 2, 3, 4]).where('id not in (?)', Trustee.select(:super_entity_id).map(&:super_entity_id)).order(type_: :asc)
Trustee.select(:super_entity_id).map(&:super_entity_id)
Trustee.select(:super_entity_id)
Trustee.select(:super_entity_id).all
Trustee.select(:id).all
Trustee.select(:id).all.to_a
Trustee.select(:id).all
Trustee.select(:id).all)
continue
conitinue
continue
 Trustee.select(:id).all[0]
 Trustee.select(:id).all
Beneficiary.select(:id).all
Beneficiary.select(:id)
Trustee.all
Trustee.find(1)
Trustee.count
Trustee
Beneficiary.count
Beneficiary.count()
  Trustee.find(1)
super_entity
params[:key]
params[:id]
Trustee.find(params[:id])
super_entity.beneficiary
continue
super_entity
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).order(type_: :asc)
@entity
entity
super_entity
is_person
type
entity_id
entity
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).order(type_: :asc)
super_entity
super_entity.trustee_ids
super_entity.trustees
super_entity.trustee
super_entity.id.beneficiaries
super_entity.id
super_entity.entity_type
super_entity.entity_id
super_entity.beneficiaries.entity_id
super_entity.beneficiaries.ids
super_entity.beneficiaries.id
super_entity.beneficiaries
super_entity
super_entity.id
super_entity.entity_key
super_entity.entity
super_entity.key
super_entity
super_entity.beneficiaries
super_entity.beneficiary_ids
super_entity.beneficiaries
super_entity.beneficiary_id
super_entity.beneficiary
super_entity
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4])
person_true_entities = current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).where('id != ?', super_entity.beneficiary.entity_id).order(type_: :asc)
is_person
current_user.entities_list(super_entity.id).where(type_: [1, 3, 4]).where('id != ?', super_entity.beneficiary.entity_id).order(type_: :asc)
is_person
continue
continuew
is_person
type
current_user.entities_list(super_entity.id).where(type_: [10, 11, 12, 13, 14]).order(type_: :asc)
current_user.entities_list(super_entity.id)
continue
@trustee
params[:id]
@entity
continue
@trustee.super_entity_id
@trustee.use_temp_id
@trustee.class_name
@trustee.super_entity_id
@trustee
@trusteee
continue
super_entity.principal.temp_id
super_entity.principal.entity_id
super_entity.principal
super_entity
current_user.entities_list(super_entity.id).where(type_: [1, 2]).order(type_: :asc)
type
next
is_person
continue
is_person
